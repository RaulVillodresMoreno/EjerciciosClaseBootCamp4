package com.nttdata.bootcamp.Ejercicio2;

import java.math.BigDecimal;
import java.util.List;
import java.util.stream.Collectors;

public class Main {
	public static void main(String[] args) {
		List<Product> shopping = List.of(
	            new Product("Clothes", new BigDecimal("15.90"), Tax.NORMAL),
	            new Product("Bread", new BigDecimal("1.5"), Tax.SUPERREDUCED),
	            new Product("Meat", new BigDecimal("13.99"), Tax.REDUCED),
	            new Product("Cheese", new BigDecimal("3.59"), Tax.SUPERREDUCED),
	            new Product("Coke", new BigDecimal("1.89"), Tax.REDUCED),
	            new Product("Whiskey", new BigDecimal("19.90"), Tax.NORMAL));
			
		List<Integer> listaIntegers = List.of(1, 2, 6, 1);
		System.out.println(sum(listaIntegers));
		
		Double totales = shopping.stream().mapToDouble(total->total.price.doubleValue()+(total.tax.percent*total.price.doubleValue()/100)).sum();
		
		System.out.println(totales);
			
		//System.out.println((findProduct(shopping).getName()));
			

		
	}
	
	/**
	 * public static Product findProduct (List<Product> shopping){
	 * 		 return (Product) shopping.stream()
			       .filter(shoppings -> shoppings.getName().startsWith("C"))
			       .collect(Collectors.toList());
	}
	 */

	
    public static int sum(List<Integer> list)
    {
        // create a stream of integers
        // filter the stream
        // add the integers
        return list.stream()
            .filter(i -> i > 5)
            .mapToInt(i -> i)
            .sum();
    }
}
